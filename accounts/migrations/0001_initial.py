# Generated by Django 5.1.5 on 2025-09-07 06:40

import accounts.models
import accounts.storage
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Name can only contain letters, numbers, spaces, apostrophes, and hyphens', regex="^[a-zA-Z0-9 \\'-]+$")])),
                ('type', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Type can only contain letters and spaces', regex='^[a-zA-Z ]+$')])),
                ('category', models.CharField(choices=[('Domestic', 'Domestic'), ('Wild', 'Wild'), ('Poultry', 'Poultry'), ('Livestock', 'Livestock')], max_length=100)),
                ('breed', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='Breed can only contain letters and spaces', regex='^[a-zA-Z ]+$')])),
                ('additionalInfo', models.JSONField(default=dict, validators=[accounts.models.validate_json_dict])),
                ('images', models.JSONField(default=list, help_text='List of image URLs stored in Supabase', validators=[accounts.models.validate_json_list])),
                ('features', models.JSONField(default=list, validators=[accounts.models.validate_json_list])),
                ('isPublic', models.BooleanField(default=False)),
                ('animal_id', models.CharField(editable=False, max_length=40, unique=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-registered_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.pet')),
            ],
        ),
        migrations.CreateModel(
            name='PetLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_name', models.CharField(blank=True, max_length=100)),
                ('pet_type', models.CharField(blank=True, max_length=100)),
                ('pet_breed', models.CharField(blank=True, max_length=100)),
                ('pet_description', models.TextField(blank=True)),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('status', models.CharField(choices=[('lost', 'Lost'), ('found', 'Found'), ('resolved', 'Resolved')], default='lost', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('last_seen_date', models.DateField(blank=True, null=True)),
                ('last_seen_time', models.TimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, help_text='Pet image stored in Supabase', null=True, storage=accounts.storage.SupabaseStorage(), upload_to='pets/')),
                ('features', models.JSONField(default=list, validators=[accounts.models.validate_json_list])),
                ('is_user_location', models.BooleanField(default=False)),
                ('pet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations', to='accounts.pet')),
            ],
            options={
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reporter_email', models.EmailField(max_length=254)),
                ('reporter_name', models.CharField(max_length=100)),
                ('owner_share_info', models.BooleanField(default=False)),
                ('reporter_share_info', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pet_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='accounts.petlocation')),
            ],
        ),
        migrations.CreateModel(
            name='EditedPetImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited_image', models.ImageField(help_text='The edited image file stored in Supabase', storage=accounts.storage.SupabaseStorage(), upload_to='edited_pets/')),
                ('edit_metadata', models.JSONField(default=dict, help_text='JSON store of editing parameters and history')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edited_pet_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Edited Pet Image',
                'verbose_name_plural': 'Edited Pet Images',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['owner'], name='accounts_ed_owner_i_421b5e_idx'), models.Index(fields=['created_at'], name='accounts_ed_created_1ae11a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='pet',
            index=models.Index(fields=['animal_id'], name='accounts_pe_animal__b0fbb3_idx'),
        ),
        migrations.AddIndex(
            model_name='pet',
            index=models.Index(fields=['owner'], name='accounts_pe_owner_i_d73c92_idx'),
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['status'], name='accounts_pe_status_65be1e_idx'),
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['pet'], name='accounts_pe_pet_id_e7e7fa_idx'),
        ),
        migrations.AddIndex(
            model_name='petlocation',
            index=models.Index(fields=['reported_at'], name='accounts_pe_reporte_3c5e5f_idx'),
        ),
    ]
